pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('aws-creds')
        AWS_SECRET_ACCESS_KEY = credentials('aws-creds')
    }

    stages {
        stage('Clone Repository') {
            steps {
                git credentialsId: 'github-creds', url: 'https://github.com/mannumanisha/project1.git', branch: 'main'
            }
        }

        stage('Install Terraform') {
            steps {
                script {
                    // Download Terraform binary
                    echo 'Downloading Terraform binary...
                    sh 'wget https://releases.hashicorp.com/terraform/1.0.0/terraform_1.0.0_linux_amd64.zip'

                    // Unzip Terraform binary
                    sh 'unzip terraform_1.0.0_linux_amd64.zip'

                    // Move Terraform binary to /usr/local/bin/
                    sh 'sudo mv terraform /usr/local/bin/'

                    // Verify Terraform installation
                   sh 'terraform version'
            }
        }

        stage('Terraform Init') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-creds']]) {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                sh 'terraform plan'
            }
        }

        stage('Terraform Apply') {
            steps {
                sh 'terraform apply -auto-approve'
            }
        }
    }

    post {
        always {
            // Placeholder echo statement
            echo 'Performing cleanup actions...'
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}

